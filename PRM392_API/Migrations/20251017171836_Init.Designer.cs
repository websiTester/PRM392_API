// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRM392_API.Models;

#nullable disable

namespace PRM392_API.Migrations
{
    [DbContext(typeof(PRM392Context))]
    [Migration("20251017171836_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRM392_API.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsGroupAssignment")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("PRM392_API.Models.AssignmentGrade", b =>
                {
                    b.Property<int>("AssignmentGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentGradeId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Grade")
                        .HasColumnType("real");

                    b.Property<DateTime?>("GradedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentGradeId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("AssignmentGrades");
                });

            modelBuilder.Entity("PRM392_API.Models.AssignmentSubmission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("SubmitLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeacherComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TeacherGrade")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SubmissionId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("AssignmentSubmissions");
                });

            modelBuilder.Entity("PRM392_API.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("ClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("PRM392_API.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateBy");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("PRM392_API.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("ClassId");

                    b.HasIndex("LeaderId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("PRM392_API.Models.GroupTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskId");

                    b.HasIndex("AssignedTo");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupTasks");
                });

            modelBuilder.Entity("PRM392_API.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("FileLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MaterialId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("PRM392_API.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotificationId");

                    b.HasIndex("ClassId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PRM392_API.Models.PeerReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("RevieweeId")
                        .HasColumnType("int");

                    b.Property<int?>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReviewId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("PeerReviews");
                });

            modelBuilder.Entity("PRM392_API.Models.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentClasses");
                });

            modelBuilder.Entity("PRM392_API.Models.StudentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentGroups");
                });

            modelBuilder.Entity("PRM392_API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PRM392_API.Models.Assignment", b =>
                {
                    b.HasOne("PRM392_API.Models.Class", "Class")
                        .WithMany("Assignments")
                        .HasForeignKey("ClassId");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("PRM392_API.Models.AssignmentGrade", b =>
                {
                    b.HasOne("PRM392_API.Models.Assignment", "Assignment")
                        .WithMany("AssignmentGrades")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("PRM392_API.Models.User", "Student")
                        .WithMany("StudentGrades")
                        .HasForeignKey("StudentId");

                    b.HasOne("PRM392_API.Models.User", "Teacher")
                        .WithMany("TeacherGrades")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Assignment");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("PRM392_API.Models.AssignmentSubmission", b =>
                {
                    b.HasOne("PRM392_API.Models.Assignment", "Assignment")
                        .WithMany("AssignmentSubmissions")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("PRM392_API.Models.User", "Student")
                        .WithMany("AssignmentSubmissions")
                        .HasForeignKey("StudentId");

                    b.Navigation("Assignment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PRM392_API.Models.Class", b =>
                {
                    b.HasOne("PRM392_API.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId");

                    b.HasOne("PRM392_API.Models.User", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("PRM392_API.Models.Course", b =>
                {
                    b.HasOne("PRM392_API.Models.User", "CreateByNavigation")
                        .WithMany("Courses")
                        .HasForeignKey("CreateBy");

                    b.Navigation("CreateByNavigation");
                });

            modelBuilder.Entity("PRM392_API.Models.Group", b =>
                {
                    b.HasOne("PRM392_API.Models.Class", "Class")
                        .WithMany("Groups")
                        .HasForeignKey("ClassId");

                    b.HasOne("PRM392_API.Models.User", "Leader")
                        .WithMany("Groups")
                        .HasForeignKey("LeaderId");

                    b.Navigation("Class");

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("PRM392_API.Models.GroupTask", b =>
                {
                    b.HasOne("PRM392_API.Models.User", "AssignedToNavigation")
                        .WithMany("GroupTasks")
                        .HasForeignKey("AssignedTo");

                    b.HasOne("PRM392_API.Models.Assignment", "Assignment")
                        .WithMany("GroupTasks")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("PRM392_API.Models.Group", "Group")
                        .WithMany("GroupTasks")
                        .HasForeignKey("GroupId");

                    b.Navigation("AssignedToNavigation");

                    b.Navigation("Assignment");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("PRM392_API.Models.Material", b =>
                {
                    b.HasOne("PRM392_API.Models.Assignment", "Assignment")
                        .WithMany("Materials")
                        .HasForeignKey("AssignmentId");

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("PRM392_API.Models.Notification", b =>
                {
                    b.HasOne("PRM392_API.Models.Class", "Class")
                        .WithMany("Notifications")
                        .HasForeignKey("ClassId");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("PRM392_API.Models.PeerReview", b =>
                {
                    b.HasOne("PRM392_API.Models.Assignment", "Assignment")
                        .WithMany("PeerReviews")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("PRM392_API.Models.Group", "Group")
                        .WithMany("PeerReviews")
                        .HasForeignKey("GroupId");

                    b.HasOne("PRM392_API.Models.User", "Reviewee")
                        .WithMany("PeerReviewReviewees")
                        .HasForeignKey("RevieweeId");

                    b.HasOne("PRM392_API.Models.User", "Reviewer")
                        .WithMany("PeerReviewReviewers")
                        .HasForeignKey("ReviewerId");

                    b.Navigation("Assignment");

                    b.Navigation("Group");

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("PRM392_API.Models.StudentClass", b =>
                {
                    b.HasOne("PRM392_API.Models.Class", "Class")
                        .WithMany("StudentClasses")
                        .HasForeignKey("ClassId");

                    b.HasOne("PRM392_API.Models.User", "Student")
                        .WithMany("StudentClasses")
                        .HasForeignKey("StudentId");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PRM392_API.Models.StudentGroup", b =>
                {
                    b.HasOne("PRM392_API.Models.Group", "Group")
                        .WithMany("StudentGroups")
                        .HasForeignKey("GroupId");

                    b.HasOne("PRM392_API.Models.User", "Student")
                        .WithMany("StudentGroups")
                        .HasForeignKey("StudentId");

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PRM392_API.Models.Assignment", b =>
                {
                    b.Navigation("AssignmentGrades");

                    b.Navigation("AssignmentSubmissions");

                    b.Navigation("GroupTasks");

                    b.Navigation("Materials");

                    b.Navigation("PeerReviews");
                });

            modelBuilder.Entity("PRM392_API.Models.Class", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Groups");

                    b.Navigation("Notifications");

                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("PRM392_API.Models.Course", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("PRM392_API.Models.Group", b =>
                {
                    b.Navigation("GroupTasks");

                    b.Navigation("PeerReviews");

                    b.Navigation("StudentGroups");
                });

            modelBuilder.Entity("PRM392_API.Models.User", b =>
                {
                    b.Navigation("AssignmentSubmissions");

                    b.Navigation("Classes");

                    b.Navigation("Courses");

                    b.Navigation("GroupTasks");

                    b.Navigation("Groups");

                    b.Navigation("PeerReviewReviewees");

                    b.Navigation("PeerReviewReviewers");

                    b.Navigation("StudentClasses");

                    b.Navigation("StudentGrades");

                    b.Navigation("StudentGroups");

                    b.Navigation("TeacherGrades");
                });
#pragma warning restore 612, 618
        }
    }
}
